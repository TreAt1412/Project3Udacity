{
	"info": {
		"_postman_id": "cfccd4d7-fcf4-4a97-9a02-8f8099ca0968",
		"name": "ValidationTest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10996340"
	},
	"item": [
		{
			"name": "Create book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create book success\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"success\");",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/{{path}}?book={{book_name}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "book",
							"value": "{{book_name}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json();",
							"var expectBooks = 200;",
							"",
							"pm.test(\"Number of books found: \" + expectBooks, function () {",
							"    pm.expect(data.length).to.eql(expectBooks);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/{{path}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{path}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Book By Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json();",
							"var id = pm.environment.get(\"id\");",
							"var bookname = pm.environment.get(\"book_name\");",
							"pm.test(\"Book is found \", function () {",
							"    pm.expect(data.ID).to.eql(id);",
							"    pm.expect(data.Title).to.eql(bookname);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/{{path}}/{{id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{path}}",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update book success\", function () {",
							"    pm.response.to.have.body(\"null\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/{{path}}?book={{updated_book_name}}&id={{id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "book",
							"value": "{{updated_book_name}}"
						},
						{
							"key": "id",
							"value": "{{id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Book Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete book success\", function () {",
							"    pm.expect(pm.response.text()).to.eql(\"\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/{{path}}/{{id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{path}}",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}